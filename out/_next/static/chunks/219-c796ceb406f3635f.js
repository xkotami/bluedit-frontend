(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[219],{7331:function(e,t,r){"use strict";var s=r(5893),o=r(1664),a=r.n(o),n=r(1026),c=r.n(n),i=r(7294),l=r(1163),u=r(6660);t.Z=()=>{let e,t,r;let[o,n]=(0,i.useState)(!1),[m,d]=(0,i.useState)(""),h=(0,l.useRouter)();return(0,i.useEffect)(()=>{let e=()=>{let e=(0,u.$8)();n(e),e&&d(localStorage.getItem("userEmail")||"")};e();let t=()=>{e()};return window.addEventListener("storage",t),()=>window.removeEventListener("storage",t)},[]),(0,s.jsx)("header",{className:c().header,children:(0,s.jsxs)("div",{className:c().container,children:[(0,s.jsx)("div",{className:c().logo,children:(0,s.jsx)(a(),{href:"/",children:(0,s.jsx)("img",{src:"/images/logo.png",alt:"logo"})})}),(0,s.jsxs)("nav",{className:c().nav,children:[(0,s.jsx)(a(),{href:"/",className:"".concat(c().link," ").concat("/"===h.pathname?c().active:""),children:"Home"}),(0,s.jsx)(a(),{href:"/community",className:"".concat(c().link," ").concat((e="/community",h.pathname===e)?c().active:""),children:"Community"}),o?(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a(),{href:"/profile",className:"".concat(c().link," ").concat((t="/profile",h.pathname===t)?c().active:""),children:"Profile"}),(0,s.jsx)("button",{className:"".concat(c().logout),onClick:()=>{(0,u.Uh)(),n(!1),d(""),h.push("/")},children:"Logout"})]}):(0,s.jsx)(a(),{href:"/login",className:"".concat(c().link," ").concat(c().cta," ").concat((r="/login",h.pathname===r)?c().active:""),children:"Login"})]})]})})}},3479:function(e,t,r){"use strict";r.d(t,{$8:function(){return a},ON:function(){return i},W4:function(){return l},WY:function(){return m},a$:function(){return d},uv:function(){return u}});let s="https://cne-functions.azurewebsites.net/api",o=()=>localStorage.getItem("authToken"),a=()=>!!o(),n=()=>{{let e=localStorage.getItem("userId");return e?parseInt(e):null}},c=async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=o(),a=async e=>fetch("".concat(s).concat(e),{...t,headers:{"Content-Type":"application/json",...r&&{Authorization:"Bearer ".concat(r)},...t.headers}}),n=await a(e);if(404!==n.status)return n;let c=e.split("/").filter(e=>""!==e);if(c.length>0){let e=c[c.length-1],t=e.endsWith("s")?e.slice(0,-1):e+"s",r="/"+c.slice(0,-1).join("/")+(c.length>1?"/":"")+t;return await a(r)}return n},i={getCurrentUser:async e=>{try{let t=await c("/user/".concat(e));if(!t.ok)throw Error("Failed to get current user");return await t.json()}catch(e){{let e=localStorage.getItem("userId"),t=localStorage.getItem("userEmail");if(!e||!t)throw Error("No user data available");return{id:parseInt(e),email:t,username:t.split("@")[0],points:0,password:""}}}}},l={login:async(e,t)=>{try{let r=await fetch("".concat(s,"/user/login"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:t})});if(!r.ok){let e=await r.json();if(console.log("Backend login error:",e),500===r.status){if("ERROR_USER_NOT_FOUND"===e.message)throw Error("User not found");if("ERROR_INVALID_CREDENTIALS"===e.message)throw Error("Invalid email or password");throw Error(e.message||"Login failed")}if(401===r.status)throw Error("Invalid credentials");if(404===r.status)throw Error("User not found");throw Error(e.message||"Login failed")}let o=await r.json();return o.token&&(localStorage.setItem("authToken",o.token),localStorage.setItem("userEmail",o.email),localStorage.setItem("userId",o.id)),{success:!0,data:o}}catch(t){let e="Login failed";return t instanceof Error&&(t.message.includes("ERROR_USER_NOT_FOUND")?e="User not found":t.message.includes("ERROR_INVALID_CREDENTIALS")?e="Invalid email or password":t.message.includes("User not found")?e="User not found":t.message.includes("Invalid")?e="Invalid email or password":t.message&&(e=t.message)),{success:!1,error:e}}},register:async(e,t,r)=>{try{let o=await fetch("".concat(s,"/user/register"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e,email:t,password:r})});if(!o.ok){let e=await o.json();if(console.log("Backend register error:",e),400===o.status)throw Error(e.message||"User already exists");if(500===o.status&&"ERROR_USER_EXISTS"===e.message)throw Error("User with this email or username already exists");throw Error(e.message||"Registration failed")}let a=await o.json();return a.token&&(localStorage.setItem("authToken",a.token),localStorage.setItem("userEmail",a.email),localStorage.setItem("userId",a.id)),{success:!0,data:a}}catch(t){let e="Registration failed";return t instanceof Error&&(t.message.includes("ERROR_USER_EXISTS")?e="User with this email or username already exists":t.message.includes("User with this email or username already exists")?e="User with this email or username already exists":t.message.includes("User already exists")?e="User with this email or username already exists":t.message.includes("ERROR_INVALID_EMAIL")?e="Please enter a valid email address":t.message&&(e=t.message)),{success:!1,error:e}}},getAllUsers:async()=>{try{let e=await c("/users");if(!e.ok)throw Error("Failed to fetch users");let t=await e.json();return{success:!0,data:t}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch users"}}},getUserById:async e=>{try{let t=await c("/user/".concat(e));if(!t.ok)throw Error("User not found");let r=await t.json();return{success:!0,data:r}}catch(e){return{success:!1,error:e instanceof Error?e.message:"User not found"}}}},u={getAllCommunities:async()=>{try{let e=await c("/communities");if(!e.ok)throw Error("Failed to fetch communities");let t=await e.json();return{success:!0,data:t}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch communities"}}},getCommunityById:async e=>{try{let t=await c("/communities/".concat(e));if(!t.ok)throw Error("Community not found");let r=await t.json();return{success:!0,data:r}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Community not found"}}},getCommunityByPostId:async e=>{try{let t=await c("/community/post/".concat(e));if(!t.ok)throw Error("Community not found");let r=await t.json();return{success:!0,data:r}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Community not found"}}},createCommunity:async(e,t)=>{try{let r=await c("/communities",{method:"POST",body:JSON.stringify({name:e,description:t})});if(!r.ok){let e=await r.json();throw Error(e.message||"Failed to create community")}let s=await r.json();return{success:!0,data:s}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to create community"}}},getUserCommunities:async()=>{try{let e=await c("/community/user");if(!e.ok)throw Error("Failed to fetch user communities");let t=await e.json();return{success:!0,data:t}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch user communities"}}},joinCommunity:async e=>{try{let t=await c("/community/join/".concat(e),{method:"PUT"});if(!t.ok){let e=await t.json();throw Error(e.message||"Failed to join community")}let r=await t.json();return{success:!0,data:r}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to join community"}}},leaveCommunity:async e=>{try{let t=await c("/community/leave/".concat(e),{method:"PUT"});if(!t.ok){let e=await t.json();throw Error(e.message||"Failed to leave community")}let r=await t.json();return{success:!0,data:r}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to leave community"}}}},m={getAllPosts:async()=>{try{let e=await c("/posts");if(!e.ok)throw Error("Failed to fetch posts");let t=await e.json();return{success:!0,data:t}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch posts"}}},getPostById:async e=>{try{let t=await c("/posts/".concat(e));if(!t.ok)throw Error("Post not found");let r=await t.json();return{success:!0,data:r}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Post not found"}}},getPostsByCommunity:async e=>{try{let t=await c("/post/community/".concat(e));if(!t.ok)throw Error("Failed to fetch community posts");let r=await t.json();return{success:!0,data:r}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch community posts"}}},createPost:async(e,t,r)=>{try{let s=await c("/posts",{method:"POST",body:JSON.stringify({title:e,content:t,communityId:r})});if(!s.ok){let e=await s.json(),t=e.message||e.error||"Failed to create post";throw Error(t)}let o=await s.json();return{success:!0,data:o}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to create post"}}}},d={getAllComments:async()=>{try{let e=await c("/comments");if(!e.ok){let t=await e.json();throw Error(t.message||"Failed to fetch comments")}let t=await e.json();return{success:!0,data:t}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch comments"}}},getCommentsByPost:async e=>{try{let t=await c("/comments/post/".concat(e));if(!t.ok){let e=await t.json();throw Error(e.message||"Failed to fetch comments")}let r=await t.json();return{success:!0,data:r}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch comments"}}},getCommentById:async e=>{try{let t=await c("/comments/".concat(e));if(!t.ok){let e=await t.json();throw Error(e.message||"Comment not found")}let r=await t.json();return{success:!0,data:r}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Comment not found"}}},createComment:async e=>{try{console.log("Creating comment with data:",e);let t=await c("/comments",{method:"POST",body:JSON.stringify({text:e.text,postId:e.postId,userId:e.userId})});if(!t.ok){let e=await t.json();throw console.error("Comment creation failed:",t.status,e),Error(e.message||"Failed to create comment")}let r=await t.json();return console.log("Comment created successfully:",r),{success:!0,data:r}}catch(e){return console.error("Error creating comment:",e),{success:!1,error:e instanceof Error?e.message:"Failed to create comment"}}},createReply:async e=>{try{console.log("Creating reply with data:",e);let t=await c("/comments",{method:"POST",body:JSON.stringify({text:e.text,postId:e.postId,userId:e.userId,parentId:e.parentId})});if(!t.ok){let e=await t.json();throw console.error("Reply creation failed:",t.status,e),Error(e.message||"Failed to create reply")}let r=await t.json();return console.log("Reply created successfully:",r),{success:!0,data:r}}catch(e){return console.error("Error creating reply:",e),{success:!1,error:e instanceof Error?e.message:"Failed to create reply"}}},createCommentLegacy:async(e,t)=>{let r=n();return r?d.createComment({text:e,postId:t,userId:r}):{success:!1,error:"User not authenticated"}},createReplyLegacy:async(e,t,r)=>{let s=n();return s?d.createReply({text:e,postId:t,userId:s,parentId:r}):{success:!1,error:"User not authenticated"}},getUserComments:async e=>{try{let e=await c("/comments");if(!e.ok){let t=await e.json();throw Error(t.message||"Failed to fetch user comments")}let t=await e.json();return{success:!0,data:t}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch user comments"}}}}},6660:function(e,t,r){"use strict";r.d(t,{$8:function(){return a},Uh:function(){return o},pH:function(){return s}});let s=async(e,t)=>{try{let r=await fetch("".concat(n,"/user/login"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:t})});if(!r.ok){let e=await r.json();if(console.log("Backend error:",e),500===r.status){if("ERROR_USER_NOT_FOUND"===e.message)throw Error("User not found");if("ERROR_INVALID_CREDENTIALS"===e.message)throw Error("Invalid email or password");throw Error(e.message||"Login failed")}if(401===r.status)throw Error("Invalid credentials");if(404===r.status)throw Error("User not found");throw Error(e.message||"Login failed")}let s=await r.json();return s.token&&(localStorage.setItem("authToken",s.token),localStorage.setItem("userEmail",s.email),localStorage.setItem("userId",s.id)),{success:!0,data:{token:s.token,email:s.email,id:s.id}}}catch(t){console.error("Login error:",t);let e="An error occurred during login";return t instanceof Error&&(t.message.includes("ERROR_USER_NOT_FOUND")?e="User not found":t.message.includes("ERROR_INVALID_CREDENTIALS")?e="Invalid email or password":t.message.includes("User not found")?e="User not found":t.message.includes("Invalid")?e="Invalid email or password":t.message&&(e=t.message)),{success:!1,error:e}}},o=()=>{localStorage.removeItem("authToken"),localStorage.removeItem("userEmail"),localStorage.removeItem("userId")},a=()=>!!localStorage.getItem("authToken"),n="https://cne-functions.azurewebsites.net/api"},1026:function(e){e.exports={header:"header_header__OaHfl",container:"header_container__7Rn1d",logo:"header_logo__i6gRV",nav:"header_nav__q1mtj",link:"header_link__283Rk",active:"header_active__fc8a0",logout:"header_logout__KatFs",cta:"header_cta__xQFfD"}}}]);